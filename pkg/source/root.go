package source

import (
	"errors"

	"github.com/spf13/viper"
)

const rootContent = `<p>
  <ac:structured-macro ac:name="children" ac:schema-version="2">
    <ac:parameter ac:name="all">true</ac:parameter>
  </ac:structured-macro>
</p>

<p><em>This page was generated by dox</em></p>`

type root struct{}

func (r *root) Extensions() []string {
	return []string{}
}

func (r *root) Matches(filename string) bool {
	return filename == ""
}

func (r *root) ID() string {
	return viper.GetString("root_id")
}

func (r *root) SetID(ID string) error {
	if r.ID() != "" {
		return errors.New("source already has an ID")
	}

	// XXX: storing the root page ID in the config file is cheap,
	//      but it's adequate for now.
	viper.Set("root_id", ID)
	err := viper.WriteConfig()
	if err != nil {
		return err
	}

	return nil
}

func (r *root) Title() string {
	// TODO: handle error here when title is not defined in config
	return viper.GetString("title")
}

func (r *root) Output() string {
	return rootContent
}

func (r *root) parse(filename string, opts Opts) (err error) {
	return nil
}
